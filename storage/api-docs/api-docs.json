{
    "openapi": "3.0.0",
    "info": {
        "title": "Custom Analytic - WW2 API",
        "description": "API Documentation for Custom Analytic - WW2",
        "contact": {
            "email": "flazen.edu@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/aircraft": {
            "get": {
                "tags": [
                    "Aircraft"
                ],
                "summary": "Show all aircraft module or combined API (all data & stats)",
                "operationId": "2a66a770ca931b589ad3756a4b983315",
                "parameters": [
                    {
                        "name": "limit_data_all",
                        "in": "query",
                        "description": "Limit the number of aircraft to show",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    },
                    {
                        "name": "order_data_all",
                        "in": "query",
                        "description": "Order the aircraft by ascending or descending",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "search_data_all",
                        "in": "query",
                        "description": "Search term for filtering aircraft",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "%20"
                        }
                    },
                    {
                        "name": "limit_stats_by_role",
                        "in": "query",
                        "description": "Limit the number of role to show",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 7
                        }
                    },
                    {
                        "name": "limit_stats_by_country",
                        "in": "query",
                        "description": "Limit the number of country to show",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 7
                        }
                    },
                    {
                        "name": "limit_stats_by_manufacturer",
                        "in": "query",
                        "description": "Limit the number of manufacturer to show",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 7
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "aircraft module found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Aircraft"
                ],
                "summary": "Add aircraft",
                "operationId": "8c7f9d6a0c59a9391edb65788acdb44e",
                "responses": {
                    "201": {
                        "description": "New aircraft ... has been created"
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Data is already exist"
                    },
                    "422": {
                        "description": "{validation_msg}"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/aircraft/limit/{limit}/order/{order}/find/{search}": {
            "get": {
                "tags": [
                    "Aircraft"
                ],
                "summary": "Show all aircraft with pagination, ordering, and search",
                "operationId": "e35ab7a5e47baf72a239e43adcf891c9",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Number of aircraft per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order by field name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "asc"
                        }
                    },
                    {
                        "name": "search",
                        "in": "path",
                        "description": "Search term based on the field name or manufacturer",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Ar"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "aircraft found"
                    },
                    "404": {
                        "description": "aircraft not found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/aircraft/summary": {
            "get": {
                "tags": [
                    "Aircraft"
                ],
                "summary": "Show aircraft summary",
                "operationId": "3655b06802b4a374f6f37688ad4bb83d",
                "responses": {
                    "200": {
                        "description": "aircraft found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/aircraft/total/byrole/{limit}": {
            "get": {
                "tags": [
                    "Aircraft"
                ],
                "summary": "Total aircraft by role",
                "operationId": "86721f354fdaa5c6c4fe931a692510cb",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Number of aircraft per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "aircraft found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/aircraft/total/bymanufacturer/{limit}": {
            "get": {
                "tags": [
                    "Aircraft"
                ],
                "summary": "Total aircraft by manufacturer",
                "operationId": "c8cdf67e6eb3116f51d8b298b097db5c",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Number of aircraft per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "aircraft found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/aircraft/total/bysides": {
            "get": {
                "tags": [
                    "Aircraft"
                ],
                "summary": "Total aircraft by sides",
                "operationId": "69d787263b94e0c1244e5dde786a4891",
                "responses": {
                    "200": {
                        "description": "aircraft found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/aircraft/total/bycountry/{limit}": {
            "get": {
                "tags": [
                    "Aircraft"
                ],
                "summary": "Total aircraft by country",
                "operationId": "8438062cc4073c0cef01044617e144ca",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Number of aircraft per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "aircraft found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/aircraft/{id}": {
            "put": {
                "tags": [
                    "Aircraft"
                ],
                "summary": "Update aircraft by id",
                "operationId": "110265732d53cc6346e5b4555d482eb6",
                "responses": {
                    "200": {
                        "description": "aircraft ... has been updated"
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "{validation_msg}"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Aircraft"
                ],
                "summary": "Delete aircraft by id",
                "operationId": "79638bccea88a136f57024ab11926ab4",
                "responses": {
                    "200": {
                        "description": "aircraft ... has been deleted"
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "{validation_msg}"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Sign in to the Apps",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "responses": {
                    "200": {
                        "description": "{user_data}"
                    },
                    "422": {
                        "description": "{validation_msg}"
                    },
                    "401": {
                        "description": "Wrong username or password"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Sign out from Apps",
                "operationId": "3f19b742e4ead13f81ba0d6c0d46ac1b",
                "responses": {
                    "200": {
                        "description": "Logout success"
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/my": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get my profile info",
                "operationId": "7a7add02ec426511cfeb72fb4dfb1615",
                "responses": {
                    "200": {
                        "description": "User found"
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/books": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Show all book module or combined API (all data & stats)",
                "operationId": "6bfaa1e82b9c2a7d290d1e76fcfaedbb",
                "parameters": [
                    {
                        "name": "limit_data_all",
                        "in": "query",
                        "description": "Limit the number of books to show",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    },
                    {
                        "name": "order_data_all",
                        "in": "query",
                        "description": "Order the books by ascending or descending",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "search_data_all",
                        "in": "query",
                        "description": "Search term for filtering books",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "%20"
                        }
                    },
                    {
                        "name": "limit_stats_by_reviewer",
                        "in": "query",
                        "description": "Limit the number of reviewers to show",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 7
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "book module found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Books"
                ],
                "summary": "Add book",
                "operationId": "e11705649c7570aefd1c7e5681f6039f",
                "responses": {
                    "201": {
                        "description": "New book ... has been created"
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Data is already exist"
                    },
                    "422": {
                        "description": "{validation_msg}"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/books/limit/{limit}/order/{order}/find/{search}": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Show all books with pagination, ordering, and search",
                "operationId": "3f3903cee7245081d0d0ec2c80ed25be",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Number of book per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order by field title",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "asc"
                        }
                    },
                    {
                        "name": "search",
                        "in": "path",
                        "description": "Search term based on the field author or reviewer",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Peter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "book found"
                    },
                    "404": {
                        "description": "book not found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/books/total/byreviewer/{limit}": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Total book by reviewer",
                "operationId": "66ac360396c09cd53aa7d4f8fcc924bf",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Number of book per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "book found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/books/total/byyearreview": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Total book by year reviewe",
                "operationId": "803051e3bdd22d00b2c2e107e109979d",
                "responses": {
                    "200": {
                        "description": "book found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/books/{id}": {
            "put": {
                "tags": [
                    "Books"
                ],
                "summary": "Update book by id",
                "operationId": "2951dc63ad2a2ff59df3b19efc11f63d",
                "responses": {
                    "200": {
                        "description": "book ... has been updated"
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "{validation_msg}"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Books"
                ],
                "summary": "Delete book by id",
                "operationId": "042657021377632b3b71c834ec499e23",
                "responses": {
                    "200": {
                        "description": "book ... has been updated"
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/casualities/limit/{limit}/order/{orderby}/{ordertype}": {
            "get": {
                "tags": [
                    "Casualities"
                ],
                "summary": "Show all casualities with ordering",
                "operationId": "35d49e1ee41a9f30cc0e6390bffe6b73",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Number of country per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "orderby",
                        "in": "path",
                        "description": "Field name to order",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "military_death"
                        }
                    },
                    {
                        "name": "ordertype",
                        "in": "path",
                        "description": "Order by field that used in param orderby",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "desc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "casualities found"
                    },
                    "404": {
                        "description": "casualities not found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/casualities/totaldeath/bycountry/{order}/limit/{limit}": {
            "get": {
                "tags": [
                    "Casualities"
                ],
                "summary": "Total death by country",
                "operationId": "58408786fe5debd66eab2148bb2ef74e",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Number of country per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order by field total (military_death + civilian_death)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "asc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "casualities found"
                    },
                    "404": {
                        "description": "casualities not found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/casualities/summary": {
            "get": {
                "tags": [
                    "Casualities"
                ],
                "summary": "Show casualities summary",
                "operationId": "aaefae1ab88e5268272e349100e7de01",
                "responses": {
                    "200": {
                        "description": "casualities found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/casualities/totaldeath/bysides/{view}": {
            "get": {
                "tags": [
                    "Casualities"
                ],
                "summary": "Total death by sides",
                "operationId": "32c0dd44813f4d123eb9fcb57bbb60a8",
                "parameters": [
                    {
                        "name": "view",
                        "in": "path",
                        "description": "View mode based on military or civilian",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "military"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "casualities found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/discussions": {
            "post": {
                "tags": [
                    "Discussion"
                ],
                "summary": "Add discussion",
                "operationId": "fc114d34f253cf44c5b08313d3d532c3",
                "responses": {
                    "201": {
                        "description": "New discussion ... has been created"
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Data is already exist"
                    },
                    "422": {
                        "description": "{validation_msg}"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/discussions/limit/{limit}/order/{order}": {
            "get": {
                "tags": [
                    "Discussion"
                ],
                "summary": "Show all discussions with ordering",
                "operationId": "224076fc31c1cb1d58373be3c8bf88aa",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Number of discussion per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order by field created at",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "asc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "discussion found"
                    },
                    "404": {
                        "description": "discussion not found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/events": {
            "post": {
                "tags": [
                    "Event"
                ],
                "summary": "Add event",
                "operationId": "7465366b2c961c723536f7b8b4247aea",
                "responses": {
                    "201": {
                        "description": "New event ... has been created"
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Data is already exist"
                    },
                    "422": {
                        "description": "{validation_msg}"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/events/limit/{limit}/order/{order}": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Show all event with ordering",
                "operationId": "75b1ce212c9781d36ec86292c5224c34",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Number of events per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order by field event",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "asc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "event found"
                    },
                    "404": {
                        "description": "event not found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/events/{id}": {
            "put": {
                "tags": [
                    "Event"
                ],
                "summary": "Update event by id",
                "operationId": "2a8545b7f61390cbe32cfecf176883e4",
                "responses": {
                    "200": {
                        "description": "event ... has been updated"
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "{validation_msg}"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Event"
                ],
                "summary": "Delete event by id",
                "operationId": "2cd6945db2483a3ac142253e6493eb65",
                "responses": {
                    "200": {
                        "description": "event ... has been updated"
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/facilities/summary": {
            "get": {
                "tags": [
                    "Facility"
                ],
                "summary": "Show facilities summary",
                "operationId": "bbab88a2e5f981c36b7559c70fe398d1",
                "responses": {
                    "200": {
                        "description": "facilities found"
                    },
                    "404": {
                        "description": "facilities failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "facilities not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/facilities/total/bytype/{limit}": {
            "get": {
                "tags": [
                    "Facility"
                ],
                "summary": "Total facilities by type",
                "operationId": "bc7cd01fe97871b63ea2a54cb1796572",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Number of facility per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "facilities found"
                    },
                    "404": {
                        "description": "facilities failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "facilities not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/facilities/total/bycountry/{limit}": {
            "get": {
                "tags": [
                    "Facility"
                ],
                "summary": "Total facilities by country",
                "operationId": "a0e2ed5390e24afad15f90c038cbf623",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Number of facility per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "facilities found"
                    },
                    "404": {
                        "description": "facilities failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "facilities not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/facilities/total/bylocation/{type}": {
            "get": {
                "tags": [
                    "Facility"
                ],
                "summary": "Total facilities by location and type",
                "operationId": "a17158ce2d2ff0f3bec482858397015d",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Filter by field type. Can be facility type or 'NULL'",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Airfield"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "facilities found"
                    },
                    "404": {
                        "description": "facilities failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "facilities not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/facilities/total/bysides": {
            "get": {
                "tags": [
                    "Facility"
                ],
                "summary": "Total facilities by side",
                "operationId": "12373d25ef9f3acc2e4b96c445565da7",
                "responses": {
                    "200": {
                        "description": "facilities found"
                    },
                    "404": {
                        "description": "facilities failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "facilities not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/facilities/type": {
            "get": {
                "tags": [
                    "Facility"
                ],
                "summary": "Show all facility type",
                "operationId": "d5e419ea3ce6f1cfd15c60f76698fc07",
                "responses": {
                    "200": {
                        "description": "facilities found"
                    },
                    "404": {
                        "description": "facilities failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "facilities not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/feedbacks": {
            "post": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Add feedback",
                "operationId": "d32093aef824dfefbb986bc67cf96a27",
                "responses": {
                    "201": {
                        "description": "New feedback ... has been created"
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "{validation_msg}"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/feedbacks/limit/{limit}/order/{order}/{id}": {
            "get": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Show all feedbacks per stories with pagination, ordering, and search",
                "operationId": "71797070b0659a258a79a230544a470b",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Number of feedback per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order by field created at",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "asc"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the stories",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "10e62495-d508-b32f-2e8e-66fa84f43fe8"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "feedback found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Feedback found"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "body": {
                                                                "type": "string",
                                                                "example": "that content look so great!"
                                                            },
                                                            "rate": {
                                                                "type": "number",
                                                                "example": 5
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "example": "2024-09-03 00:28:28"
                                                            },
                                                            "created_by": {
                                                                "type": "string",
                                                                "example": "testeradmin"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "feedback failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "feedback not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/feedbacks/stats/{id}": {
            "get": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Show stories feedback stats by id",
                "operationId": "8d1f6a4875a1e4611c446dca88365f03",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the stories",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "10e62495-d508-b32f-2e8e-66fa84f43fe8"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "feedback stats found"
                    },
                    "404": {
                        "description": "feedback failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "feedback stats not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ships": {
            "get": {
                "tags": [
                    "Ships"
                ],
                "summary": "Show all ship module or combined API (all data & stats)",
                "operationId": "197a693a6c4503cc5e58f22f11542b7f",
                "parameters": [
                    {
                        "name": "limit_data_all",
                        "in": "query",
                        "description": "Limit the number of ships to show",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    },
                    {
                        "name": "order_data_all",
                        "in": "query",
                        "description": "Order the ships by ascending or descending",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "search_data_all",
                        "in": "query",
                        "description": "Search term for filtering ships",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "%20"
                        }
                    },
                    {
                        "name": "limit_stats_by_country",
                        "in": "query",
                        "description": "Limit the number of country to show",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 7
                        }
                    },
                    {
                        "name": "limit_stats_by_class",
                        "in": "query",
                        "description": "Limit the number of class to show",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 7
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ship module found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Ships"
                ],
                "summary": "Add ship",
                "operationId": "aa946e33b272f457b3ba826945e7696c",
                "responses": {
                    "201": {
                        "description": "New ships ... has been created"
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Data is already exist"
                    },
                    "422": {
                        "description": "{validation_msg}"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/ships/limit/{limit}/order/{order}/find/{search}": {
            "get": {
                "tags": [
                    "Ships"
                ],
                "summary": "Show all ships with pagination, ordering, and search",
                "operationId": "818551166708f51e3652634f2b56c911",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Number of ships per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order by field name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "asc"
                        }
                    },
                    {
                        "name": "search",
                        "in": "path",
                        "description": "Search term based on the field name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Peter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ship found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ship found"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "142"
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Carl Peters"
                                                            },
                                                            "class": {
                                                                "type": "string",
                                                                "example": "Carl Peters-class Tender"
                                                            },
                                                            "launch_year": {
                                                                "type": "string",
                                                                "example": "1939"
                                                            },
                                                            "country": {
                                                                "type": "string",
                                                                "example": "Germany"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ship failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "ship not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ships/summary": {
            "get": {
                "tags": [
                    "Ships"
                ],
                "summary": "Show ship summary",
                "operationId": "43bf5c16343a88ad2d996246fe0573dd",
                "responses": {
                    "200": {
                        "description": "ship found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ships/total/by/{limit}": {
            "get": {
                "tags": [
                    "Ships"
                ],
                "summary": "Total ship by class",
                "operationId": "17a7c0d67722124298c6d6ae09e7cdc7",
                "responses": {
                    "200": {
                        "description": "ship found"
                    },
                    "404": {
                        "description": "ship failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "ship not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ships/total/bycountry/{limit}": {
            "get": {
                "tags": [
                    "Ships"
                ],
                "summary": "Total ship by country",
                "operationId": "d089f7797162dc742ac7a4a571a41562",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Number of ships per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ship found"
                    },
                    "404": {
                        "description": "ship failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "ship not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ships/total/bysides": {
            "get": {
                "tags": [
                    "Ships"
                ],
                "summary": "Total ship by sides",
                "operationId": "894d2183188bc8f80b0cee76a68f7ba1",
                "responses": {
                    "200": {
                        "description": "ship found"
                    },
                    "404": {
                        "description": "ship failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "ship not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ships/total/bylaunchyear": {
            "get": {
                "tags": [
                    "Ships"
                ],
                "summary": "Total ship by launch year",
                "operationId": "88f6c9ade8a1a9c4f7d0805c6a80ccaf",
                "responses": {
                    "200": {
                        "description": "ship found"
                    },
                    "404": {
                        "description": "ship failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "ship not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ships/{id}": {
            "put": {
                "tags": [
                    "Ships"
                ],
                "summary": "Update ships by id",
                "operationId": "64d244d3387d1f5222d0d7432d331c13",
                "responses": {
                    "200": {
                        "description": "ships ... has been updated"
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "{validation_msg}"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Ships"
                ],
                "summary": "Delete ship by id",
                "operationId": "bc704835f62695fce1e7bea02a5602a7",
                "responses": {
                    "200": {
                        "description": "ships ... has been deleted"
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "{validation_msg}"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/stories/detail/{slug}": {
            "get": {
                "tags": [
                    "Stories"
                ],
                "summary": "Show stories by slug",
                "operationId": "3338718948ca20440cbf189368f83660",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the stories",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lorem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "stories found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/stories/limit/{limit}/order/{order}": {
            "get": {
                "tags": [
                    "Stories"
                ],
                "summary": "Show all stories with pagination and ordering",
                "operationId": "ef9138a82258bb9d0548c0858e4951bb",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Number of stories per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order by field created at",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "asc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "stories found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Stories found"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "slug_name": {
                                                                "type": "string",
                                                                "example": "test_story"
                                                            },
                                                            "main_title": {
                                                                "type": "string",
                                                                "example": "Test Story"
                                                            },
                                                            "story_type": {
                                                                "type": "string",
                                                                "example": "battle"
                                                            },
                                                            "story_detail": {
                                                                "type": "string",
                                                                "example": "<p>helo</p>"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "example": "2024-09-03 00:28:28"
                                                            },
                                                            "created_by": {
                                                                "type": "string",
                                                                "example": "testeradmin"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "example": "2024-09-03 00:28:28"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "stories failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "stories not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/stories/type/{type}/creator/{creator}": {
            "get": {
                "tags": [
                    "Stories"
                ],
                "summary": "Show all similiar stories by type and creator",
                "operationId": "9fff087f144dd7ad2d3af46b085a0184",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of the story",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "battle"
                        }
                    },
                    {
                        "name": "creator",
                        "in": "path",
                        "description": "Name of the story creator",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "jhon"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "stories found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/stories/top/rate": {
            "get": {
                "tags": [
                    "Stories"
                ],
                "summary": "Show 7 best rate stories",
                "operationId": "cd69885018da38254883467ca180b139",
                "responses": {
                    "200": {
                        "description": "stories found"
                    },
                    "404": {
                        "description": "stories failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "stories not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/stories/top/discuss": {
            "get": {
                "tags": [
                    "Stories"
                ],
                "summary": "Show 7 most discussed stories",
                "operationId": "3ec6031a4e5974f87a9ec7f552af2135",
                "responses": {
                    "200": {
                        "description": "stories found"
                    },
                    "404": {
                        "description": "stories failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "stories not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/vehicles": {
            "get": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Show all vehicles module or combined API (all data & stats)",
                "operationId": "94271f4562b7991061fa7c3b4ef8ce5e",
                "parameters": [
                    {
                        "name": "limit_data_all",
                        "in": "query",
                        "description": "Limit the number of vehicles to show",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    },
                    {
                        "name": "order_data_all",
                        "in": "query",
                        "description": "Order the vehicles by ascending or descending",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "search_data_all",
                        "in": "query",
                        "description": "Search term for filtering vehicles",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "%20"
                        }
                    },
                    {
                        "name": "limit_stats_by_country",
                        "in": "query",
                        "description": "Limit the number of country to show",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 7
                        }
                    },
                    {
                        "name": "limit_stats_by_role",
                        "in": "query",
                        "description": "Limit the number of role to show",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 7
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "vehicle module found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Add vehicle",
                "operationId": "cbac2f296f5a32e254cf6d0de35e2b4e",
                "responses": {
                    "201": {
                        "description": "New vehicle ... has been created"
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Data is already exist"
                    },
                    "422": {
                        "description": "{validation_msg}"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicles/limit/{limit}/order/{order}/find/{search}": {
            "get": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Show all vehicles with pagination, ordering, and search",
                "operationId": "4c2a059a6d8b927bad7c8d25b993d3ce",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Number of vehicle per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order by field name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "asc"
                        }
                    },
                    {
                        "name": "search",
                        "in": "path",
                        "description": "Search term based on the field name or manufacturer",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "SdKfz"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "vehicle found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle found"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "103"
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "SdKfz 10"
                                                            },
                                                            "primary_role": {
                                                                "type": "string",
                                                                "example": "Transport"
                                                            },
                                                            "manufacturer": {
                                                                "type": "string",
                                                                "example": "Deutsche Maschinenfabrik AG"
                                                            },
                                                            "country": {
                                                                "type": "string",
                                                                "example": "Germany"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "vehicle failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "vehicle not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/vehicles/summary": {
            "get": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Show vehicle summary",
                "operationId": "3f77f8c995cb36d03fc41ad2a14bc7c0",
                "responses": {
                    "200": {
                        "description": "vehicle found"
                    },
                    "404": {
                        "description": "vehicle failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "vehicle not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/vehicles/total/byrole/{limit}": {
            "get": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Total vehicle by role",
                "operationId": "142369555dedc674854c3ee26f387aa5",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Number of vehicle per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "vehicle found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle found"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "context": {
                                                        "type": "string",
                                                        "example": "Armored Tank"
                                                    },
                                                    "total": {
                                                        "type": "number",
                                                        "example": 80
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "vehicle failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "vehicle not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/vehicles/total/bycountry/{limit}": {
            "get": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Total vehicle by country",
                "operationId": "83f8b102d5c180a3dbc0999679b7da60",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Number of vehicle per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "vehicle found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle found"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "context": {
                                                        "type": "string",
                                                        "example": "United States"
                                                    },
                                                    "total": {
                                                        "type": "number",
                                                        "example": 80
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "vehicle failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "vehicle not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/vehicles/total/bysides": {
            "get": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Total vehicle by sides",
                "operationId": "b42a7973fd5db79109f8dc897a980e60",
                "responses": {
                    "200": {
                        "description": "vehicle found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle found"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "context": {
                                                        "type": "string",
                                                        "example": "axis"
                                                    },
                                                    "total": {
                                                        "type": "number",
                                                        "example": 80
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "vehicle failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "vehicle not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/vehicles/{id}": {
            "put": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Update vehicle by id",
                "operationId": "ee5b61dd5b7c44672b87e8e82b1ac35c",
                "responses": {
                    "200": {
                        "description": "vehicle ... has been updated"
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "{validation_msg}"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Delete vehicle by id",
                "operationId": "efefe1b25ad0d463f90651eaf66b90ce",
                "responses": {
                    "200": {
                        "description": "vehicle ... has been updated"
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/weapons": {
            "get": {
                "tags": [
                    "Weapon"
                ],
                "summary": "Show all weapons module or combined API (all data & stats)",
                "operationId": "32af284cc91d9708e9a875137a8ad335",
                "parameters": [
                    {
                        "name": "limit_data_all",
                        "in": "query",
                        "description": "Limit the number of weapons to show",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    },
                    {
                        "name": "order_data_all",
                        "in": "query",
                        "description": "Order the weapons by ascending or descending",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "search_data_all",
                        "in": "query",
                        "description": "Search term for filtering weapons",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "%20"
                        }
                    },
                    {
                        "name": "limit_stats_by_country",
                        "in": "query",
                        "description": "Limit the number of country to show",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 7
                        }
                    },
                    {
                        "name": "limit_stats_by_type",
                        "in": "query",
                        "description": "Limit the number of type to show",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 7
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "weapon module found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Weapon"
                ],
                "summary": "Add weapon",
                "operationId": "9e27dd955d3b457e55c6eef217bb612a",
                "responses": {
                    "201": {
                        "description": "New weapon ... has been created"
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Data is already exist"
                    },
                    "422": {
                        "description": "{validation_msg}"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/weapons/limit/{limit}/order/{order}/find/{search}": {
            "get": {
                "tags": [
                    "Weapon"
                ],
                "summary": "Show all weapons with pagination, ordering, and search",
                "operationId": "a550297f88ab1cb4e3f229b8040127d3",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Number of weapon per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order by field name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "asc"
                        }
                    },
                    {
                        "name": "search",
                        "in": "path",
                        "description": "Search term based on the field name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "75 mm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "weapon found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Weapon found"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "103"
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "75 mm How M1"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "Field Gun"
                                                            },
                                                            "country": {
                                                                "type": "string",
                                                                "example": "United States"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "weapon failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "weapon not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/weapons/summary": {
            "get": {
                "tags": [
                    "Weapon"
                ],
                "summary": "Show weapon summary",
                "operationId": "3d5ff4cbb52c431d1e2afa69a2201089",
                "responses": {
                    "200": {
                        "description": "weapon found"
                    },
                    "404": {
                        "description": "weapon failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "weapon not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/weapons/total/bytype/{limit}": {
            "get": {
                "tags": [
                    "Weapon"
                ],
                "summary": "Total weapon by type",
                "operationId": "ef2b293732f7d1d2711c4cb05355a735",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Number of weapon per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "weapon found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Weapon found"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "context": {
                                                        "type": "string",
                                                        "example": "Field Gun"
                                                    },
                                                    "total": {
                                                        "type": "number",
                                                        "example": 80
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "weapon failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "weapon not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/weapons/total/bycountry/{limit}": {
            "get": {
                "tags": [
                    "Weapon"
                ],
                "summary": "Total weapon by country",
                "operationId": "37b4d36817b1d7ad2c405de4ceef5f4d",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Number of weapon per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "weapon found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Weapon found"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "context": {
                                                        "type": "string",
                                                        "example": "United States"
                                                    },
                                                    "total": {
                                                        "type": "number",
                                                        "example": 80
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "weapon failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "weapon not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/weapons/total/bysides": {
            "get": {
                "tags": [
                    "Weapon"
                ],
                "summary": "Total weapon by sides",
                "operationId": "bdd42b2dacf11e8be8865c9a90c007ed",
                "responses": {
                    "200": {
                        "description": "weapon found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Weapon found"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "context": {
                                                        "type": "string",
                                                        "example": "axis"
                                                    },
                                                    "total": {
                                                        "type": "number",
                                                        "example": 80
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "weapon failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "weapon not found"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/weapons/{id}": {
            "put": {
                "tags": [
                    "Weapon"
                ],
                "summary": "Update weapon by id",
                "operationId": "b57d0dd761aee19592ef6a4c81b45539",
                "responses": {
                    "200": {
                        "description": "weapon ... has been updated"
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "{validation_msg}"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Weapon"
                ],
                "summary": "Delete weapon by id",
                "operationId": "1e15e2b6981efb646255f379c28dea01",
                "responses": {
                    "200": {
                        "description": "weapon ... has been updated"
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Admins": {
                "required": [
                    "id",
                    "username",
                    "fullname",
                    "email",
                    "password",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "string",
                        "format": "uuid"
                    },
                    "username": {
                        "description": "Unique Identifier for admin",
                        "type": "string"
                    },
                    "fullname": {
                        "description": "Admin's fullname",
                        "type": "string"
                    },
                    "bio": {
                        "description": "Admin's bio",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email for Auth and Task Scheduling",
                        "type": "string"
                    },
                    "password": {
                        "description": "Sanctum Hashed Password",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp when the admin was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the admin profile was updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Aircraft": {
                "required": [
                    "id",
                    "name",
                    "primary_role",
                    "manufacturer",
                    "country",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "description": "Name of the aircraft",
                        "type": "string"
                    },
                    "primary_role": {
                        "description": "The primary role of the aircraft",
                        "type": "string"
                    },
                    "manufacturer": {
                        "description": "Manufacturer / Company of the aircraft",
                        "type": "string"
                    },
                    "country": {
                        "description": "The country who invented the aircraft",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp when the aircraft data was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the aircraft data was updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Books": {
                "required": [
                    "id",
                    "title",
                    "author",
                    "reviewer",
                    "review_date",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "string",
                        "format": "uuid"
                    },
                    "title": {
                        "description": "Title of the book",
                        "type": "string"
                    },
                    "author": {
                        "description": "Name of the book's author",
                        "type": "string"
                    },
                    "reviewer": {
                        "description": "Name of the book's reviewer",
                        "type": "string"
                    },
                    "review_date": {
                        "description": "Date when the book is reviewed",
                        "type": "string",
                        "format": "date"
                    },
                    "created_at": {
                        "description": "Timestamp when the book data was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the book data was updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Casualities": {
                "required": [
                    "id",
                    "country",
                    "continent",
                    "total_population",
                    "military_death",
                    "civilian_death",
                    "death_per_pop",
                    "avg_death_per_pop"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "string",
                        "format": "uuid"
                    },
                    "country": {
                        "description": "Name of the country",
                        "type": "string"
                    },
                    "continent": {
                        "description": "Continent where the country is located",
                        "type": "string"
                    },
                    "total_population": {
                        "description": "Total population of the country",
                        "type": "string"
                    },
                    "military_death": {
                        "description": "Number of military deaths",
                        "type": "integer"
                    },
                    "civilian_death": {
                        "description": "Number of civilian deaths",
                        "type": "integer"
                    },
                    "death_per_pop": {
                        "description": "Death per population ratio",
                        "type": "number",
                        "format": "float"
                    },
                    "avg_death_per_pop": {
                        "description": "Average death per population ratio",
                        "type": "number",
                        "format": "float"
                    },
                    "military_wounded": {
                        "description": "Number of military wounded",
                        "type": "integer"
                    },
                    "created_at": {
                        "description": "Timestamp when the casualties data was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the casualties data was updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Discussions": {
                "required": [
                    "id",
                    "stories_id",
                    "body",
                    "reviewer",
                    "review_date",
                    "created_at",
                    "created_by"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "string",
                        "format": "uuid"
                    },
                    "stories_id": {
                        "description": "Id of the story",
                        "type": "string"
                    },
                    "reply_id": {
                        "description": "Id of the other discussion who got replied",
                        "type": "string"
                    },
                    "body": {
                        "description": "The body of the message",
                        "type": "string"
                    },
                    "attachment": {
                        "description": "Detail of attachment attached in the discussion. Contain attachment url, attachment type, and attachment name",
                        "type": "string",
                        "format": "date"
                    },
                    "created_at": {
                        "description": "Timestamp when the story data was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the story data was updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "description": "ID of the user / admin who created the discussion",
                        "type": "string",
                        "format": "uuid"
                    },
                    "updated_by": {
                        "description": "ID of the user / admin who updated the discussion",
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            },
            "Error": {
                "required": [
                    "id",
                    "message",
                    "stack_trace",
                    "file",
                    "line",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "integer"
                    },
                    "message": {
                        "description": "Message or description of the error",
                        "type": "string"
                    },
                    "stack_trace": {
                        "description": "Trail of function calls leading up to the error",
                        "type": "string"
                    },
                    "file": {
                        "description": "Path of the file where the error is faced",
                        "type": "string"
                    },
                    "line": {
                        "description": "Line of code in specific file where the error is faced",
                        "type": "integer"
                    },
                    "created_at": {
                        "description": "Timestamp when the error was faced",
                        "type": "string",
                        "format": "date-time"
                    },
                    "fixed_at": {
                        "description": "Timestamp when the dev team finally fix and deploy the bug / error fix",
                        "type": "string",
                        "format": "date-time"
                    },
                    "faced_by": {
                        "description": "ID of the user who specific faced the error",
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            },
            "Events": {
                "required": [
                    "id",
                    "event",
                    "date_start",
                    "date_end",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "string",
                        "format": "uuid"
                    },
                    "event": {
                        "description": "Name of the event",
                        "type": "string"
                    },
                    "date_start": {
                        "description": "Date of event when the event was start",
                        "type": "string"
                    },
                    "date_end": {
                        "description": "Date of event when the event was end",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp when the book data was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the book data was updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Facilities": {
                "required": [
                    "id",
                    "name",
                    "type",
                    "location",
                    "country",
                    "coordinate",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "description": "Name of the facility",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of the facility",
                        "type": "string"
                    },
                    "location": {
                        "description": "Location name of the facility",
                        "type": "string"
                    },
                    "country": {
                        "description": "Country of the facility located",
                        "type": "string"
                    },
                    "coordinate": {
                        "description": "Date of event when the event was end",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp when the facility data was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the facility data was updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Feedbacks": {
                "required": [
                    "id",
                    "stories_id",
                    "body",
                    "rate",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "string",
                        "format": "uuid"
                    },
                    "stories_id": {
                        "description": "Id of the story",
                        "type": "string"
                    },
                    "body": {
                        "description": "The body of feedback",
                        "type": "string"
                    },
                    "rate": {
                        "description": "Rate of the feedback",
                        "type": "integer"
                    },
                    "created_at": {
                        "description": "Timestamp when the feedback data was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "description": "Id of user who created the feedback",
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            },
            "Histories": {
                "required": [
                    "id",
                    "history_type",
                    "body",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "string",
                        "format": "uuid"
                    },
                    "history_type": {
                        "description": "Id of the story",
                        "type": "string"
                    },
                    "body": {
                        "description": "The body of feedback",
                        "type": "string"
                    },
                    "rate": {
                        "description": "Rate of the feedback",
                        "type": "integer"
                    },
                    "created_at": {
                        "description": "Timestamp when the feedback data was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "description": "Id of the user who created the history",
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            },
            "Ships": {
                "required": [
                    "id",
                    "name",
                    "class",
                    "country",
                    "year",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "description": "Name of the ship",
                        "type": "string"
                    },
                    "class": {
                        "description": "Class of the ship",
                        "type": "string"
                    },
                    "country": {
                        "description": "Country of the ship",
                        "type": "string"
                    },
                    "year": {
                        "description": "Year when the ships is launched",
                        "type": "integer"
                    },
                    "created_at": {
                        "description": "Timestamp when the ship data was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the ship data was updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Stories": {
                "required": [
                    "id",
                    "slug_name",
                    "main_title",
                    "is_finished",
                    "story_type",
                    "date_start",
                    "story_location",
                    "story_tag",
                    "story_detail",
                    "story_reference",
                    "created_at",
                    "created_by"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "string",
                        "format": "uuid"
                    },
                    "slug_name": {
                        "description": "Slug name of the story",
                        "type": "string"
                    },
                    "main_title": {
                        "description": "Main title of the story",
                        "type": "string"
                    },
                    "is_finished": {
                        "description": "Indicates if the story is finished",
                        "type": "boolean"
                    },
                    "story_type": {
                        "description": "Type of the story",
                        "type": "string"
                    },
                    "date_start": {
                        "description": "Date when the story was started",
                        "type": "string",
                        "format": "date"
                    },
                    "date_end": {
                        "description": "Date when the story was end",
                        "type": "string",
                        "format": "date"
                    },
                    "story_result": {
                        "description": "Result of the story",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "story_location": {
                        "description": "Location of the story",
                        "type": "string"
                    },
                    "story_tag": {
                        "description": "Tags associated with the story",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "story_detail": {
                        "description": "Detailed description of the story",
                        "type": "string"
                    },
                    "story_stats": {
                        "description": "Statistics related to the story",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "story_reference": {
                        "description": "References for the story",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "created_at": {
                        "description": "Timestamp when the story was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "description": "User who created the story",
                        "type": "string"
                    },
                    "updated_at": {
                        "description": "Timestamp when the story was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "Timestamp when the story was deleted",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Users": {
                "required": [
                    "id",
                    "username",
                    "fullname",
                    "email",
                    "role",
                    "password",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "string",
                        "format": "uuid"
                    },
                    "username": {
                        "description": "Unique Identifier for admin",
                        "type": "string"
                    },
                    "fullname": {
                        "description": "Admin's fullname",
                        "type": "string"
                    },
                    "role": {
                        "description": "User's role for get access to the apps feature",
                        "type": "string"
                    },
                    "bio": {
                        "description": "User's bio",
                        "type": "string"
                    },
                    "profile_img": {
                        "description": "Profile image of user",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email for Auth and Task Scheduling",
                        "type": "string"
                    },
                    "email_verified_at": {
                        "description": "Timestamp when the email is validated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "password": {
                        "description": "Sanctum Hashed Password",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp when the user was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the user profile was updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Weapons": {
                "required": [
                    "id",
                    "name",
                    "type",
                    "country",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "description": "Name of the weapon",
                        "type": "string"
                    },
                    "type": {
                        "description": "Class of the weapon",
                        "type": "string"
                    },
                    "country": {
                        "description": "Country of the weapon",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp when the weapon data was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the weapon data was updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "JWT Authorization header using the Bearer scheme",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Aircraft",
            "description": "Aircraft"
        },
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Books",
            "description": "Books"
        },
        {
            "name": "Casualities",
            "description": "Casualities"
        },
        {
            "name": "Discussion",
            "description": "Discussion"
        },
        {
            "name": "Event",
            "description": "Event"
        },
        {
            "name": "Facility",
            "description": "Facility"
        },
        {
            "name": "Feedback",
            "description": "Feedback"
        },
        {
            "name": "Ships",
            "description": "Ships"
        },
        {
            "name": "Stories",
            "description": "Stories"
        },
        {
            "name": "Vehicle",
            "description": "Vehicle"
        },
        {
            "name": "Weapon",
            "description": "Weapon"
        }
    ]
}